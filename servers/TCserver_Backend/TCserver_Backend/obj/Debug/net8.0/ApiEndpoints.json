[
  {
    "ContainingType": "TCserver_Backend.Controllers.AuthController",
    "Method": "GetUserLevel",
    "RelativePath": "api/Auth/level",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.AuthController",
    "Method": "RegisterWithCode",
    "RelativePath": "api/Auth/register-with-code",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "TCserver_Backend.Dtos.RegisterWithCodeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.AuthController",
    "Method": "SendVerificationCode",
    "RelativePath": "api/Auth/send-verification-code",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "TCserver_Backend.Dtos.SendCodeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.AuthController",
    "Method": "GetTotalUsers",
    "RelativePath": "api/Auth/total-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "YourNamespace.Controllers.BilibiliProxyController",
    "Method": "GetFans",
    "RelativePath": "api/BilibiliProxy/fans",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.BYDcontroller",
    "Method": "GetSettings",
    "RelativePath": "api/byd/setting",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "type",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "parent_id",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.BYDcontroller",
    "Method": "GetSetting",
    "RelativePath": "api/byd/setting/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.ChailianheController",
    "Method": "GetAll",
    "RelativePath": "api/Chailianhe",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.ChailianheController",
    "Method": "ApplyLianHe",
    "RelativePath": "api/Chailianhe/ApplyLianHe",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "TCserver_Backend.Models.chailianhe",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TournamentsController",
    "Method": "GetChampions",
    "RelativePath": "api/champions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tournamentId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[TCserver_Backend.Models.Game.Champions, TCserver_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.CheckInController",
    "Method": "GetCheckIns",
    "RelativePath": "api/CheckIn",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.CheckInController",
    "Method": "CheckIn",
    "RelativePath": "api/CheckIn",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "req",
        "Type": "TCserver_Backend.Controllers.CheckInRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.CommentController",
    "Method": "GetComments",
    "RelativePath": "api/Comment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[TCserver_Backend.Dtos.ViewCommentDto, TCserver_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.CommentController",
    "Method": "AddComment",
    "RelativePath": "api/Comment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "TCserver_Backend.Dtos.CreateCommentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.CommentController",
    "Method": "ReportComment",
    "RelativePath": "api/Comment/report",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "req",
        "Type": "TCserver_Backend.Controllers.CommentController\u002BReportCommentRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.FeedBackController",
    "Method": "SubmitFeedback",
    "RelativePath": "api/FeedBack",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "feedback",
        "Type": "TCserver_Backend.Models.FeedBack",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.FeedBackController",
    "Method": "GetAllFeedbacks",
    "RelativePath": "api/FeedBack/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FinancialController",
    "Method": "Search",
    "RelativePath": "api/Financial",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "zhiChu",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "zhiChuXiangMu",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "dateFrom",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "dateTo",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "payReceive",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[TCserver_Backend.Models.Financial, TCserver_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FinancialController",
    "Method": "GetAll",
    "RelativePath": "api/Financial/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[TCserver_Backend.Models.Financial, TCserver_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.InventoryController",
    "Method": "UseRenameCard",
    "RelativePath": "api/Inventory/use-rename-card",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "req",
        "Type": "TCserver_Backend.Dtos.RenameRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.LoginController",
    "Method": "Login",
    "RelativePath": "api/Login/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "TCserver_Backend.Controllers.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.LoginController",
    "Method": "Logout",
    "RelativePath": "api/Login/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "TCserver_Backend.Controllers.LogoutRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.LoginController",
    "Method": "RefreshToken",
    "RelativePath": "api/Login/refresh-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "TCserver_Backend.Controllers.RefreshTokenRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.NovelsController",
    "Method": "GetNovels",
    "RelativePath": "api/Novels",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.NovelsController",
    "Method": "GetNovel",
    "RelativePath": "api/Novels/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.NovelsController",
    "Method": "GetChapters",
    "RelativePath": "api/Novels/{id}/chapters",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.NovelsController",
    "Method": "GetChapterContent",
    "RelativePath": "api/Novels/chapter/{chapterId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chapterId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.NovelsController",
    "Method": "GetChapterActionStatus",
    "RelativePath": "api/Novels/chapter/{chapterId}/actionstatus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chapterId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.NovelsController",
    "Method": "LikeChapter",
    "RelativePath": "api/Novels/chapter/{chapterId}/like",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chapterId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.NovelsController",
    "Method": "ReportChapter",
    "RelativePath": "api/Novels/chapter/{chapterId}/report",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chapterId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.PostsController",
    "Method": "CreatePost",
    "RelativePath": "api/Posts/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "TCserver_Backend.Dtos.CreatePostDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.PostsController",
    "Method": "HasLiked",
    "RelativePath": "api/Posts/hasliked",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.PostsController",
    "Method": "GetHotPosts",
    "RelativePath": "api/Posts/hot",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "count",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.PostsController",
    "Method": "LikePost",
    "RelativePath": "api/Posts/like",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.PostsController",
    "Method": "GetPosts",
    "RelativePath": "api/Posts/list",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "keyword",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "postType",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "sort",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.PostsController",
    "Method": "ReportPost",
    "RelativePath": "api/Posts/report",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TCserver_Backend.Controllers.PostsController\u002BReportRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.PostsController",
    "Method": "UnlikePost",
    "RelativePath": "api/Posts/unlike",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.PostsController",
    "Method": "UploadMedia",
    "RelativePath": "api/Posts/UploadMedia",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "images",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      },
      {
        "Name": "videos",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      },
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.ShetuanController",
    "Method": "GetAll",
    "RelativePath": "api/Shetuan",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.ShetuanController",
    "Method": "ApplyShetuan",
    "RelativePath": "api/Shetuan/ApplyShetuan",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shetuan",
        "Type": "TCserver_Backend.Models.shetuan",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TournamentsController",
    "Method": "GetTournaments",
    "RelativePath": "api/Tournaments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[TCserver_Backend.Models.Game.Tournaments, TCserver_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TournamentsController",
    "Method": "GetTournament",
    "RelativePath": "api/Tournaments/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TCserver_Backend.Models.Game.Tournaments",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TournamentsController",
    "Method": "CancelSignUp",
    "RelativePath": "api/Tournaments/{id}/cancel-signup",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TournamentsController",
    "Method": "IsSignedUp",
    "RelativePath": "api/Tournaments/{id}/isSignedUp",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TournamentsController",
    "Method": "SignUp",
    "RelativePath": "api/Tournaments/{id}/signup",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TournamentsController",
    "Method": "GetTournamentSignups",
    "RelativePath": "api/Tournaments/{id}/signups",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TradeController",
    "Method": "Buy",
    "RelativePath": "api/Trade/buy",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "req",
        "Type": "TCserver_Backend.Controllers.TradeController\u002BBuyRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TradeController",
    "Method": "GetInventory",
    "RelativePath": "api/Trade/inventory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TradeController",
    "Method": "GetShopItems",
    "RelativePath": "api/Trade/items",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TradeController",
    "Method": "GetMyPoints",
    "RelativePath": "api/Trade/points",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.TradeController",
    "Method": "GetUserInfo",
    "RelativePath": "api/Trade/userinfo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.UserInfoController",
    "Method": "GetUserInfo",
    "RelativePath": "api/UserInfo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.UserInfoController",
    "Method": "AddExp",
    "RelativePath": "api/UserInfo/AddExp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "expAmount",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.UserInfoController",
    "Method": "CheckLevelUp",
    "RelativePath": "api/UserInfo/CheckLevelUp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.UserInfoController",
    "Method": "Heartbeat",
    "RelativePath": "api/UserInfo/heartbeat",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.UserInfoController",
    "Method": "ImageProxy",
    "RelativePath": "api/UserInfo/imageproxy",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "path",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.UserInfoController",
    "Method": "GetRanking",
    "RelativePath": "api/UserInfo/LevelRanking",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "type",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.UserInfoController",
    "Method": "GetOnlineUsers",
    "RelativePath": "api/UserInfo/online",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.UserInfoController",
    "Method": "TestConnection",
    "RelativePath": "api/UserInfo/TestConnection",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.UserInfoController",
    "Method": "TestLocalConnection",
    "RelativePath": "api/UserInfo/TestLocalConnection",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.UserInfoController",
    "Method": "UploadAvatar",
    "RelativePath": "api/UserInfo/UploadAvatar",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.WorldBasicRulesController",
    "Method": "GetAll",
    "RelativePath": "api/WorldBasicRules",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TCserver_Backend.Controllers.WorldBasicRulesController",
    "Method": "GetById",
    "RelativePath": "api/WorldBasicRules/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]